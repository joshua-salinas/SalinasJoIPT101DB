/*
Deployment script for CoffeeShopDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CoffeeShopDB"
:setvar DefaultFilePrefix "CoffeeShopDB"
:setvar DefaultDataPath "C:\Users\cacas\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\cacas\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[CoffeeShop]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CoffeeShop] (
    [ItemId]   INT        IDENTITY (1, 1) NOT NULL,
    [ItemName] NCHAR (10) NULL,
    [Price]    NCHAR (10) NULL,
    [Quantity] NCHAR (10) NULL,
    [Total]    NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([ItemId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CoffeeShop])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CoffeeShop] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CoffeeShop] ([ItemId], [ItemName], [Price], [Quantity], [Total])
        SELECT   [ItemId],
                 [ItemName],
                 [Price],
                 [Quantity],
                 [Total]
        FROM     [dbo].[CoffeeShop]
        ORDER BY [ItemId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CoffeeShop] OFF;
    END

DROP TABLE [dbo].[CoffeeShop];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CoffeeShop]', N'CoffeeShop';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Procedure [dbo].[CreateCoffeeShop]...';


GO
ALTER PROCEDURE [dbo].[CreateCoffeeShop]
	@ItemId INT =  NULL , 
    @ItemName NCHAR(50) = NULL, 
    @Price NCHAR(50) = NULL, 
    @Quantity NCHAR(50) = NULL, 
    @Total NCHAR(50) = NULL
AS
BEGIN
INSERT INTO [dbo].[CoffeeShop] ([ItemId], [ItemName],[Price],[Quantity],[Total])
    VALUES (@ItemId, @ItemName, @Price, @Quantity, @Total)
END
GO
PRINT N'Altering Procedure [dbo].[UpdateCoffeeShop]...';


GO
ALTER PROCEDURE [dbo].[UpdateCoffeeShop]
	@ItemId INT =  NULL , 
    @ItemName NCHAR(550) = NULL, 
    @Price NCHAR(50) = NULL, 
    @Quantity NCHAR(50) = NULL, 
    @Total NCHAR(50) = NULL
AS
Begin
Update CoffeeShop 
set ItemId = @ItemId,
ItemName = @ItemName,
Price = @Price,
Quantity = @Quantity,
Total = @Total
Where ItemId = @ItemId;

End
GO
PRINT N'Refreshing Procedure [dbo].[DeleteCoffeeShop]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[DeleteCoffeeShop]';


GO
PRINT N'Refreshing Procedure [dbo].[GetALLCoffeeShop]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetALLCoffeeShop]';


GO
PRINT N'Refreshing Procedure [dbo].[GetCoffeeShop]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetCoffeeShop]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO dbo.CoffeeShop (ItemId, ItemName, Price, Quantity, Total)
VALUES (@ItemId, @ItemName, @Price, @Quantity, @Total);
GO

GO
PRINT N'Update complete.';


GO
